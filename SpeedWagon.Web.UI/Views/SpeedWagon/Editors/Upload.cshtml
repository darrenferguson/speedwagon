@model SpeedWagon.Web.Models.Content.ContentEditorModel
@{
    IEnumerable<string> files = Model.Values[Model.PropertyName].Split(',').Where(x => !string.IsNullOrEmpty(x));
}

@Html.ClientRequirement("/speedwagon/lib/blueimp-file-upload/js/vendor/jquery.ui.widget.js", ClientSideIncludeType.Javascript)
@Html.ClientRequirement("/speedwagon/lib/blueimp-file-upload/js/jquery.fileupload.js", ClientSideIncludeType.Javascript)
@Html.ClientRequirement("/speedwagon/lib/blueimp-file-upload/css/jquery.fileupload.css", ClientSideIncludeType.Css)

@Html.ClientRequirement("upload.js", ClientSideIncludeType.Javascript)
@Html.ClientRequirement("upload.css", ClientSideIncludeType.Css)

    <div class="root" id="uploads_@Model.PropertyName">

        <ul class="result list-group">
            @if (files.Any())
            {
                int counter = 1;
                foreach (string file in files)
                {
                    <li class="list-group-item" data-count="@counter">
                        <a target="_blank" href="/uploads@(file)">@file</a>

                    </li>
                    counter++;

                }
            }
        </ul>
        
        <a href="#" class="btn btn-danger" onclick="clearUploads('uploads_@Model.PropertyName');">
            <span class="glyphicon glyphicon-minus"></span> Clear
        </a>

        <div class="progress" style="margin-top: 10px; display: none;">
            <div class="bar" style=""></div>
        </div>

        <span class="btn btn-success fileinput-button">
            <i class="glyphicon glyphicon-plus"></i>
            <span>Add files...</span>
            <input type="file" multiple data-url="/SpeedWagonFile/Upload" class="form-control-file upload">
        </span>

        <input type="hidden" asp-for="Values[Model.PropertyName]" class="value">

        <input type="hidden" asp-for="ContentPath">

    </div>
