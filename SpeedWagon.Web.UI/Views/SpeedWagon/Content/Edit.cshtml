@model SpeedWagon.Web.Models.View.Content.EditContentViewModel
@using SpeedWagon.Web.Models.Content
@{
    Layout = "~/Views/SpeedWagon/_Layout.cshtml";
    IDictionary<string, object> contentProperties = Model.Content.Content;
}
@section Scripts {

    @await Html.PartialAsync("~/Views/SpeedWagon/_EditorScripts.cshtml")
}
<h2>Edit Content</h2>

<h3>
    @Model.Content.Name
</h3>

<form asp-controller="SpeedWagonContent" asp-action="Edit" method="post">

    <input type="hidden" asp-for="Url" value="@Model.Url" />

    @foreach (var property in Model.ContentTypeProperties)
    {
        SpeedWagonContent editor = Model.Editors.Where(x => x.Name == property.Editor).FirstOrDefault();

        ContentEditorModel editorModel = new ContentEditorModel { PropertyName = property.Name, Values = Model.Values };

        <div class="form-group">

            <label>@property.Name</label>

            @if (editor == null || string.IsNullOrEmpty(editor.Template))
            {
                @await Html.PartialAsync("~/Views/SpeedWagon/Editors/Default.cshtml", editorModel)
            }
            else
            {
                var result = Model.ViewEngine.GetView(null, editor.Template, true);

                if (result.Success)
                {
                    @await Html.PartialAsync(editor.Template, editorModel)
                }
                else
                {
                    @await Html.PartialAsync("~/Views/SpeedWagon/Editors/Default.cshtml", editorModel)
                }
            }
        </div>
    }

    <button type="submit" class="btn btn-primary">Save Content</button>
    <a class="btn btn-danger" asp-action="List" asp-controller="SpeedWagonContent" asp-route-url="@Model.Parent">Cancel</a>
</form>
